/*FLOATS*
.author-image {
  float: left;
  margin-bottom: 20px;
}
.author {
  /*padding-left: 80px;
  padding-top: 10px;
  float: left;
  margin-top: 10px;
  margin-left: 20px;
}
h1 {
  float: left;
}
nav {
  float: right;
}
/*.clear {
  clear: both;
  /*clear both means it'll clear the float both left and rigth
} Not a good practice*/
/*Clear fix Hack
.clearfix::after {
  clear: both;
  content: "";
  display: block;
}
article {
  width: 700px;

  float: left;
}
aside {
  width: 360px;
  float: right;
}
footer {
  clear: both;
}
Box sizing is a property that allows us to include the padding and border in an element's total width and height.*/
.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
/*FLEXBOX
.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.author-box {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}
.author {
  margin-bottom: 0;
  margin-left: 15px;
}
.related-post {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}
.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
}
.related-link::link {
  font-size: 17px;
  font-weight: bold;
  font-style: normal;
  display: block;
}
.row {
  display: flex;
  gap: 200px;
  margin-bottom: 60px;
  align-items: flex-start; /* applies related post prtion vertically
}
article {
  flex: 1;
  margin-bottom: 0;
}
aside {
  DEFAULTS
        flex-grow: 0;
        flex-shrink: 1;
        flex-basis: auto;
  flex: 0 0 400px; assigning width
}*/

/*CSS GRID*/
.container {
  display: grid;
  grid-template-columns: 1fr 400px;
  column-gap: 75px;
  row-gap: 60px;
  align-items: start;
}
.main-header {
  /*grid-column: 1 / span 2;*/
  grid-column: 1/-1;
}
article {
}
aside {
}
footer {
  grid-column: 1/-1;
}
